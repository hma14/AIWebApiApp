{"ast":null,"code":"var _jsxFileName = \"E:\\\\programs\\\\AI programs\\\\AIMessageApp\\\\frontend\\\\src\\\\components\\\\Dropdown.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dropdown = ({\n  sx\n}) => {\n  _s();\n  const [value, setValue] = React.useState(\"\");\n  const handleChange = event => {\n    console.log(event.target.value);\n    setValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: sx,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      value: value,\n      onChange: handleChange,\n      displayEmpty: true,\n      inputProps: {\n        \"aria-label\": \"Select an option\"\n      },\n      sx: {\n        width: \"200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"option1\",\n        children: \"ChatGpt OpenAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"option2\",\n        children: \"DeepSeek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"option3\",\n        children: \"Llama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","Select","MenuItem","Box","jsxDEV","_jsxDEV","Dropdown","sx","_s","value","setValue","useState","handleChange","event","console","log","target","children","onChange","displayEmpty","inputProps","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/programs/AI programs/AIMessageApp/frontend/src/components/Dropdown.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport Box from \"@mui/material/Box\"\r\n\r\ninterface DropdownProps {\r\n  sx?: object\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = ({ sx }) => {\r\n  const [value, setValue] = React.useState<string>(\"\")\r\n\r\n  const handleChange = (event: SelectChangeEvent<string>) => {\r\n    console.log(event.target.value)\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Box sx={sx}>\r\n      <Select\r\n        value={value}\r\n        onChange={handleChange}\r\n        displayEmpty\r\n        inputProps={{ \"aria-label\": \"Select an option\" }}\r\n        sx={{ width: \"200px\" }}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        <MenuItem value=\"option1\">ChatGpt OpenAI</MenuItem>\r\n        <MenuItem value=\"option2\">DeepSeek</MenuItem>\r\n        <MenuItem value=\"option3\">Llama</MenuItem>\r\n      </Select>\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAA6B,sBAAsB;AAChE,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,GAAG,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMnC,OAAO,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMC,YAAY,GAAIC,KAAgC,IAAK;IACzDC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACP,KAAK,CAAC;IAC/BC,QAAQ,CAACG,KAAK,CAACG,MAAM,CAACP,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEJ,OAAA,CAACF,GAAG;IAACI,EAAE,EAAEA,EAAG;IAAAU,QAAA,eACVZ,OAAA,CAACJ,MAAM;MACLQ,KAAK,EAAEA,KAAM;MACbS,QAAQ,EAAEN,YAAa;MACvBO,YAAY;MACZC,UAAU,EAAE;QAAE,YAAY,EAAE;MAAmB,CAAE;MACjDb,EAAE,EAAE;QAAEc,KAAK,EAAE;MAAQ,CAAE;MAAAJ,QAAA,gBAEvBZ,OAAA,CAACH,QAAQ;QAACO,KAAK,EAAC,EAAE;QAAAQ,QAAA,eAChBZ,OAAA;UAAAY,QAAA,EAAI;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACXpB,OAAA,CAACH,QAAQ;QAACO,KAAK,EAAC,SAAS;QAAAQ,QAAA,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACnDpB,OAAA,CAACH,QAAQ;QAACO,KAAK,EAAC,SAAS;QAAAQ,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAC7CpB,OAAA,CAACH,QAAQ;QAACO,KAAK,EAAC,SAAS;QAAAQ,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAjB,EAAA,CA1BYF,QAAiC;AAAAoB,EAAA,GAAjCpB,QAAiC;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}