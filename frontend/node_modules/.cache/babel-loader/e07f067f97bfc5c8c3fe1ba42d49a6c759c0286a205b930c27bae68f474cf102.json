{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.glob = exports.sync = exports.iterate = exports.iterateSync = exports.stream = exports.streamSync = exports.Ignore = exports.hasMagic = exports.Glob = exports.unescape = exports.escape = void 0;\nexports.globStreamSync = globStreamSync;\nexports.globStream = globStream;\nexports.globSync = globSync;\nexports.globIterateSync = globIterateSync;\nexports.globIterate = globIterate;\nconst minimatch_1 = require(\"minimatch\");\nconst glob_js_1 = require(\"./glob.js\");\nconst has_magic_js_1 = require(\"./has-magic.js\");\nvar minimatch_2 = require(\"minimatch\");\nObject.defineProperty(exports, \"escape\", {\n  enumerable: true,\n  get: function () {\n    return minimatch_2.escape;\n  }\n});\nObject.defineProperty(exports, \"unescape\", {\n  enumerable: true,\n  get: function () {\n    return minimatch_2.unescape;\n  }\n});\nvar glob_js_2 = require(\"./glob.js\");\nObject.defineProperty(exports, \"Glob\", {\n  enumerable: true,\n  get: function () {\n    return glob_js_2.Glob;\n  }\n});\nvar has_magic_js_2 = require(\"./has-magic.js\");\nObject.defineProperty(exports, \"hasMagic\", {\n  enumerable: true,\n  get: function () {\n    return has_magic_js_2.hasMagic;\n  }\n});\nvar ignore_js_1 = require(\"./ignore.js\");\nObject.defineProperty(exports, \"Ignore\", {\n  enumerable: true,\n  get: function () {\n    return ignore_js_1.Ignore;\n  }\n});\nfunction globStreamSync(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).streamSync();\n}\nfunction globStream(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).stream();\n}\nfunction globSync(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).walkSync();\n}\nasync function glob_(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).walk();\n}\nfunction globIterateSync(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).iterateSync();\n}\nfunction globIterate(pattern, options = {}) {\n  return new glob_js_1.Glob(pattern, options).iterate();\n}\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexports.streamSync = globStreamSync;\nexports.stream = Object.assign(globStream, {\n  sync: globStreamSync\n});\nexports.iterateSync = globIterateSync;\nexports.iterate = Object.assign(globIterate, {\n  sync: globIterateSync\n});\nexports.sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync\n});\nexports.glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync: exports.sync,\n  globStream,\n  stream: exports.stream,\n  globStreamSync,\n  streamSync: exports.streamSync,\n  globIterate,\n  iterate: exports.iterate,\n  globIterateSync,\n  iterateSync: exports.iterateSync,\n  Glob: glob_js_1.Glob,\n  hasMagic: has_magic_js_1.hasMagic,\n  escape: minimatch_1.escape,\n  unescape: minimatch_1.unescape\n});\nexports.glob.glob = exports.glob;","map":{"version":3,"names":["exports","globStreamSync","globStream","globSync","globIterateSync","globIterate","minimatch_1","require","glob_js_1","has_magic_js_1","minimatch_2","Object","defineProperty","enumerable","get","escape","unescape","glob_js_2","Glob","has_magic_js_2","hasMagic","ignore_js_1","Ignore","pattern","options","streamSync","stream","walkSync","glob_","walk","iterateSync","iterate","assign","sync","glob"],"sources":["E:\\programs\\AI programs\\AIMessageApp\\frontend\\node_modules\\pkghub\\node_modules\\glob\\src\\index.ts"],"sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}