{"ast":null,"code":"var _jsxFileName = \"E:\\\\programs\\\\AI programs\\\\AIMessageApp\\\\frontend\\\\src\\\\components\\\\ResultDisplay.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultDisplay = ({\n  title,\n  content,\n  style\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        border: \"1px solid #ddd\",\n        borderRadius: \"5px\",\n        padding: \"15px\",\n        backgroundColor: \"#f9f9f9\",\n        ...style\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          style: {\n            margin: \"0 0 10px 0\",\n            fontSize: \"18px\",\n            color: \"#333\"\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), Array.isArray(content) ? content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: [index + 1, \": \", item]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          style: {\n            fontSize: \"16px\",\n            color: \"#dc351f\"\n          },\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultDisplay;\nexport default ResultDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultDisplay","title","content","style","className","children","border","borderRadius","padding","backgroundColor","margin","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","item","index","_c","$RefreshReg$"],"sources":["E:/programs/AI programs/AIMessageApp/frontend/src/components/ResultDisplay.tsx"],"sourcesContent":["import React from \"react\"\nimport Box from \"@mui/material/Box\"\nimport Container from \"@mui/material/Container\"\nimport Typography from \"@mui/material/Typography\"\n\ninterface ResultDisplayProps {\n  content: string | JSX.Element\n  title?: string\n  style?: React.CSSProperties\n}\n\nconst ResultDisplay: React.FC<ResultDisplayProps> = ({\n  title,\n  content,\n  style,\n}) => {\n  return (\n    <div className=\"container\">\n      <div\n        className=\"card\"\n        style={{\n          border: \"1px solid #ddd\",\n          borderRadius: \"5px\",\n          padding: \"15px\",\n          backgroundColor: \"#f9f9f9\",\n          ...style,\n        }}\n      >\n        <div className=\"card-body\">\n          {title && (\n            <h2\n              className=\"card-title\"\n              style={{ margin: \"0 0 10px 0\", fontSize: \"18px\", color: \"#333\" }}\n            >\n              {title}\n            </h2>\n          )}\n          {Array.isArray(content) ? (\n            content.map((item, index) => (\n              <div className=\"card-text\" key={index}>\n                {index + 1}: {item}\n              </div>\n            ))\n          ) : (\n            <div\n              className=\"card-text\"\n              style={{ fontSize: \"16px\", color: \"#dc351f\" }}\n            >\n              {content}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ResultDisplay\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWzB,MAAMC,aAA2C,GAAGA,CAAC;EACnDC,KAAK;EACLC,OAAO;EACPC;AACF,CAAC,KAAK;EACJ,oBACEJ,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBN,OAAA;MACEK,SAAS,EAAC,MAAM;MAChBD,KAAK,EAAE;QACLG,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,KAAK;QACnBC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1B,GAAGN;MACL,CAAE;MAAAE,QAAA,eAEFN,OAAA;QAAKK,SAAS,EAAC,WAAW;QAAAC,QAAA,GACvBJ,KAAK,iBACJF,OAAA;UACEK,SAAS,EAAC,YAAY;UACtBD,KAAK,EAAE;YAAEO,MAAM,EAAE,YAAY;YAAEC,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAP,QAAA,EAEhEJ;QAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACL,EACAC,KAAK,CAACC,OAAO,CAAChB,OAAO,CAAC,GACrBA,OAAO,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBtB,OAAA;UAAKK,SAAS,EAAC,WAAW;UAAAC,QAAA,GACvBgB,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,IAAI;QAAA,GADYC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhC,CACN,CAAC,gBAEFjB,OAAA;UACEK,SAAS,EAAC,WAAW;UACrBD,KAAK,EAAE;YAAEQ,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAP,QAAA,EAE7CH;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAM,EAAA,GA5CKtB,aAA2C;AA8CjD,eAAeA,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}