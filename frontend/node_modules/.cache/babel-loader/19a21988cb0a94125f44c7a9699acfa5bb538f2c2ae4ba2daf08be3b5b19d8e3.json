{"ast":null,"code":"'use strict';\n\nvar _interopRequireWildcard = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n};\nvar _classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _import = require('underscore');\nvar _import2 = _interopRequireWildcard(_import);\nvar _Promise = require('bluebird');\nvar _Promise2 = _interopRequireWildcard(_Promise);\nvar _import3 = require('./npm');\nvar npm = _interopRequireWildcard(_import3);\nvar _import4 = require('./finder');\nvar finder = _interopRequireWildcard(_import4);\nvar defaults = {\n  devider: '-',\n  includes: ['name', 'version', 'logo', 'styles', 'fonts', 'javascripts', 'static', 'screenshot', 'description', 'main', 'repository', 'keywords', 'author', 'license', 'bugs', 'readme', 'path', 'depth', 'realPath', 'view engine']\n};\nvar pkgHub = function () {\n  function pkgHub() {\n    var devider = arguments[0] === undefined ? '-' : arguments[0];\n    _classCallCheck(this, pkgHub);\n    this.module = {};\n    this.module.dependencies = {};\n    this.settings = _import2['default'].clone(defaults);\n    this.settings.devider = devider;\n  }\n  _createClass(pkgHub, [{\n    key: 'config',\n    value: function config() {\n      var params = arguments[0] === undefined ? {} : arguments[0];\n      this.settings = _import2['default'].extend(defaults, params);\n      return this.settings;\n    }\n  }, {\n    key: 'list',\n    // 列出所有依赖模块\n    value: function list() {\n      var _this = this;\n      return npm.ls().then(function (packages) {\n        var modules = _import2['default'].clone(packages);\n        var dependencies = modules.dependencies;\n        if (dependencies) {\n          delete modules.dependencies;\n          _import2['default'].each(dependencies, function (module, name) {\n            dependencies[name] = wash(module);\n          });\n        }\n        modules = wash(modules);\n        modules.dependencies = dependencies;\n        _this.module = modules;\n        _this.cached = new Date();\n        return _Promise2['default'].resolve(modules);\n      });\n    }\n  }, {\n    key: 'keywords',\n    value: function keywords(shortcut, name) {\n      var devider = this.settings.devider;\n      var shortcuts = {\n        __pkghub_addons: name + devider,\n        __pkghub_plugins: name + devider + 'plugin' + devider,\n        __pkghub_themes: name + devider + 'theme' + devider\n      };\n      return shortcuts[shortcut];\n    }\n  }, {\n    key: 'find',\n    // 这里要加一层缓存，不要每次都去 list 一遍模块\n    // 因为 npm 有个问题同时调用两次 load list 会报错。\n    // 这样的话如果在路由里使用基本不现实\n    value: function find(name, modules) {\n      var _this2 = this;\n      return new _Promise2['default'](function (resolve, reject) {\n        // 先判断是否完全匹配模块名称\n        var pkg = modules.dependencies[name];\n        if (pkg) return resolve(pkg);\n\n        // 分离模块名称和模板名称\n        // e.g: candy-theme-default/index => candy-theme-default\n        var pkgname = finder.split(name);\n        var filename = finder.split(name, 'filename');\n        if (pkgname && filename) {\n          var m = modules.dependencies[pkgname] || null;\n          if (!m || !m.realPath) return reject(new Error('No module ' + pkgname + ' was found'));\n          return resolve({\n            module: m,\n            file: finder.read(m.realPath, filename)\n          });\n        }\n\n        // 如果找不到 `/` 而且不匹配任何模块，进行搜索\n        var result = {};\n        var keyword = _this2.keywords(name, modules.name) || name;\n        Object.keys(modules.dependencies).forEach(function (name) {\n          if (name.indexOf(keyword) > -1) result[name] = modules.dependencies[name];\n        });\n        if (_import2['default'].isEmpty(result)) return reject('No module ' + name + ' was found');\n        var availables = Object.keys(result);\n        if (availables.length === 1) return resolve(result[availables[0]]);\n        return resolve(result);\n      });\n    }\n  }, {\n    key: 'load',\n    // 加载某一个模块\n    // 模块名称可以是全名，也可以是部分名\n    // 模块名称可以包涵名称和子文件，比如 candy 或 candy/template.html\n    // e.g: name = 'candy/tpl.html', file === tpl.html;\n    value: function load(name, force) {\n      var _this3 = this;\n      var cache = this.module;\n\n      // 如果有缓存，返回缓存内容，这里还应该判断缓存时间, 比如大于多少天自动更新之类\n      // 这里可能出现一个 bug，就是前后查询条件不符合\n      // 这样 hub 可能会缓存到不正确的结果\n      if (this.cached && !force) {\n        return this.find(name, cache);\n      } // 如果没有缓存，第一次生成缓存\n      return this.list().then(function (modules) {\n        if (!modules.dependencies) return _Promise2['default'].reject(new Error('No module ' + name + ' was found'));\n        return _this3.find(name, modules);\n      });\n    }\n  }, {\n    key: 'addons',\n    // 返回一个模块的相关模块，包括插件和主题\n    // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-` 字符串\n    value: function addons() {\n      return this.load('__pkghub_addons');\n    }\n  }, {\n    key: 'plugins',\n    // 返回一个模块的插件列表\n    // 某个包的插件是以 devider 分割的模块名字\n    // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-plugin` 字符串\n    value: function plugins() {\n      return this.load('__pkghub_plugins');\n    }\n  }, {\n    key: 'themes',\n    // 返回一个模块的主题列表\n    // e.g:  candy-theme-balbala 会被返回\n    value: function themes() {\n      return this.load('__pkghub_themes');\n    }\n  }, {\n    key: 'install',\n    // 安装一个包，并返回所有依赖\n    value: function install(modules, dir) {\n      var _this4 = this;\n      if (_import2['default'].isString(modules)) modules = [modules];\n      return npm.install(modules, dir).then(function (logs) {\n        return _this4.list();\n      });\n    }\n  }]);\n  return pkgHub;\n}();\nexports['default'] = pkgHub;\n\n// 清理 NPM 返回的包信息中不需要的部分\nfunction wash(obj) {\n  var washed = {};\n  defaults.includes.forEach(function (key) {\n    if (obj[key]) washed[key] = obj[key];\n  });\n  return washed;\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["npm","_interopRequireWildcard","_import3","finder","_import4","defaults","devider","includes","pkgHub","arguments","undefined","module","dependencies","settings","_import2","clone","config","params","extend","list","ls","then","packages","modules","each","name","wash","_this","cached","Date","_Promise2","resolve","keywords","shortcut","shortcuts","__pkghub_addons","__pkghub_plugins","__pkghub_themes","find","reject","pkg","pkgname","split","filename","m","realPath","Error","file","read","result","keyword","_this2","Object","keys","forEach","indexOf","isEmpty","availables","length","load","force","cache","_this3","addons","plugins","themes","install","dir","isString","logs","_this4","obj","washed","key"],"sources":["E:\\programs\\AI programs\\AIMessageApp\\frontend\\node_modules\\pkghub-render\\node_modules\\pkghub\\libs\\pkghub.js"],"sourcesContent":["import _ from 'underscore'\nimport Promise from 'bluebird'\nimport * as npm from './npm'\nimport * as finder from './finder'\n\nconst defaults = {\n  devider: '-',\n  includes: [\n    'name',\n    'version',\n    'logo',\n    'styles',\n    'fonts',\n    'javascripts',\n    'static',\n    'screenshot',\n    'description',\n    'main',\n    'repository',\n    'keywords',\n    'author',\n    'license',\n    'bugs',\n    'readme',\n    'path',\n    'depth',\n    'realPath',\n    'view engine'\n  ]\n}\n\nexport default class pkgHub {\n  constructor(devider = '-') {\n    this.module = {}\n    this.module.dependencies = {}\n    this.settings = _.clone(defaults)\n    this.settings.devider = devider\n  }\n\n  config(params = {}) {\n    this.settings = _.extend(defaults, params)\n    return this.settings\n  }\n\n  // 列出所有依赖模块\n  list() {\n    return npm.ls().then(packages => {\n      var modules = _.clone(packages)\n      var dependencies = modules.dependencies\n\n      if (dependencies) {\n        delete modules.dependencies\n\n        _.each(dependencies, function(module, name) {\n          dependencies[name] = wash(module)\n        })\n      }\n\n      modules = wash(modules)\n      modules.dependencies = dependencies\n\n      this.module = modules\n      this.cached = new Date()\n\n      return Promise.resolve(modules)\n    })\n  }\n\n  keywords(shortcut, name) {\n    const devider = this.settings.devider\n    const shortcuts = {\n      '__pkghub_addons': name + devider,\n      '__pkghub_plugins': name + devider + 'plugin' + devider,\n      '__pkghub_themes': name + devider + 'theme' + devider\n    }\n\n    return shortcuts[shortcut]\n  }\n\n  // 这里要加一层缓存，不要每次都去 list 一遍模块\n  // 因为 npm 有个问题同时调用两次 load list 会报错。\n  // 这样的话如果在路由里使用基本不现实\n  find(name, modules) {\n    return new Promise((resolve, reject) => {\n      // 先判断是否完全匹配模块名称\n      var pkg = modules.dependencies[name]\n      if (pkg) \n        return resolve(pkg)\n\n      // 分离模块名称和模板名称\n      // e.g: candy-theme-default/index => candy-theme-default\n      var pkgname = finder.split(name)\n      var filename = finder.split(name, 'filename')\n\n      if (pkgname && filename) {\n        var m = modules.dependencies[pkgname] || null\n        if (!m || !m.realPath) \n          return reject(new Error(`No module ${pkgname} was found`))\n\n        return resolve({\n          module: m,\n          file: finder.read(m.realPath, filename)\n        })\n      }\n\n      // 如果找不到 `/` 而且不匹配任何模块，进行搜索\n      var result = {}\n      var keyword = this.keywords(name, modules.name) || name\n\n      Object.keys(modules.dependencies).forEach(name => {\n        if (name.indexOf(keyword) > -1) \n          result[name] = modules.dependencies[name]\n      })\n\n      if (_.isEmpty(result)) \n        return reject(`No module ${name} was found`)\n\n      var availables = Object.keys(result)\n      if (availables.length === 1) \n        return resolve(result[availables[0]])\n\n      return resolve(result)\n    })\n  }\n\n  // 加载某一个模块\n  // 模块名称可以是全名，也可以是部分名\n  // 模块名称可以包涵名称和子文件，比如 candy 或 candy/template.html\n  // e.g: name = 'candy/tpl.html', file === tpl.html;\n  load(name, force) {\n    var cache = this.module\n\n    // 如果有缓存，返回缓存内容，这里还应该判断缓存时间, 比如大于多少天自动更新之类\n    // 这里可能出现一个 bug，就是前后查询条件不符合\n    // 这样 hub 可能会缓存到不正确的结果\n    if (this.cached && !force) \n      return this.find(name, cache)\n\n    // 如果没有缓存，第一次生成缓存\n    return this.list().then(modules => {\n      if (!modules.dependencies) \n        return Promise.reject(new Error(`No module ${name} was found`))\n\n      return this.find(name, modules)\n    })\n  }\n\n  // 返回一个模块的相关模块，包括插件和主题\n  // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-` 字符串\n  addons() {\n    return this.load('__pkghub_addons')\n  }\n\n  // 返回一个模块的插件列表\n  // 某个包的插件是以 devider 分割的模块名字\n  // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-plugin` 字符串\n  plugins() {\n    return this.load('__pkghub_plugins')\n  }\n\n  // 返回一个模块的主题列表\n  // e.g:  candy-theme-balbala 会被返回\n  themes() {\n    return this.load('__pkghub_themes')\n  }\n\n  // 安装一个包，并返回所有依赖\n  install(modules, dir) {\n    if (_.isString(modules)) \n      modules = [ modules ]\n\n    return npm.install(modules, dir).then(logs => {\n      return this.list()\n    })\n  }\n}\n\n// 清理 NPM 返回的包信息中不需要的部分\nfunction wash(obj) {\n  var washed = {}\n\n  defaults.includes.forEach(key => {\n    if (obj[key]) \n      washed[key] = obj[key]\n  })\n\n  return washed\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}